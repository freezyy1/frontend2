{"ast":null,"code":"var _jsxFileName = \"/Users/dmitrij/WebstormProjects/untitled1/src/components/Game/Game.js\";\nimport React from 'react';\nimport Board from '../Board/Board';\nimport Switch from '../Switch/Switch';\nimport { calculateWinner } from '../../utils/utils';\nimport './Game.css'; // рендер всей игры с полем и комментариями\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // состояние всего поля, хранимое в истории игры\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      // номер хода\n      stepNumber: 0,\n      // первым ходит игрок Х\n      xIsNext: true,\n      // позиция\n      position: [0, 0],\n      // состояние переключателя\n      isIncrease: true\n    };\n    this.handleClickSwitch = this.handleClickSwitch.bind(this);\n  } // обработчик клика по клетке\n\n\n  handleClick(i) {\n    // получаем историю игры, при этом удаляя всю историю после этого хода\n    const history = this.state.history.slice(0, this.state.stepNumber + 1); // получаем текущий ход\n\n    const current = history[history.length - 1]; // копируем старое поле в текущую переменную\n\n    const squares = current.squares.slice(); // получаем текущую позицию, цифры - номера клеток\n\n    const currentPosition = [i < 3 ? 1 : i > 5 ? 3 : 2, i === 0 || i === 3 || i === 6 ? 1 : i === 1 || i === 4 || i === 7 ? 2 : 3]; // если победитель есть, выходим из обработчика\n\n    if (calculateWinner(squares) || squares[i]) return; // заполняем выбранную клекту\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O'; // устанавливаем новое поле и меняем очередность игроков\n\n    this.setState({\n      // записываем текущий ход в историю\n      history: history.concat([{\n        squares: squares,\n        position: currentPosition\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  } // переход к ходу из истории\n\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      // четный ход 0, нечетный Х\n      xIsNext: step % 2 === 0\n    });\n  } // обработчик клика по переключателю сортировки фильмов\n\n\n  handleClickSwitch() {\n    this.setState({\n      // меняем стейт переключателя\n      isIncrease: this.state.isIncrease ? false : true\n    });\n  }\n\n  render() {\n    // получаем историю игры\n    const history = this.state.history; // получаем текущий ход\n\n    const current = history[this.state.stepNumber]; // определение победителя и выигрышного ряда\n\n    const winner = calculateWinner(current.squares); // ходы, step - текущее состояние истории, move - текущий ход\n\n    const moves = history.map((step, move) => {\n      const desc = move ? `Перейти к ходу #${move}` : 'К началу игры';\n      const position = step.position ? ` - позиция (${step.position})` : '';\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: _ => this.jumpTo(move),\n          children: `${desc} ${position}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this);\n    }); // определение состояния игры\n\n    let status;\n\n    if (current.squares.indexOf(null) === -1 && !winner) {\n      status = 'Ничья';\n    } else if (winner) {\n      status = 'Выиграл ' + winner.winner;\n    } else {\n      status = 'Следующий ход: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          onClick: i => this.handleClick(i),\n          winnerRow: winner ? winner.row : []\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          onClick: this.handleClickSwitch,\n          isIncrease: this.state.isIncrease,\n          moves: moves\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: this.state.isIncrease ? moves : moves.reverse()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Game;","map":{"version":3,"names":["React","Board","Switch","calculateWinner","Game","Component","constructor","props","state","history","squares","Array","fill","stepNumber","xIsNext","position","isIncrease","handleClickSwitch","bind","handleClick","i","slice","current","length","currentPosition","setState","concat","jumpTo","step","render","winner","moves","map","move","desc","_","status","indexOf","row","reverse"],"sources":["/Users/dmitrij/WebstormProjects/untitled1/src/components/Game/Game.js"],"sourcesContent":["import React from 'react';\nimport Board from '../Board/Board';\nimport Switch from '../Switch/Switch';\nimport { calculateWinner } from '../../utils/utils';\nimport './Game.css';\n\n// рендер всей игры с полем и комментариями\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // состояние всего поля, хранимое в истории игры\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      // номер хода\n      stepNumber: 0,\n      // первым ходит игрок Х\n      xIsNext: true,\n      // позиция\n      position: [0, 0],\n      // состояние переключателя\n      isIncrease: true,\n    };\n    this.handleClickSwitch = this.handleClickSwitch.bind(this);\n  }\n\n  // обработчик клика по клетке\n  handleClick(i) {\n    // получаем историю игры, при этом удаляя всю историю после этого хода\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    // получаем текущий ход\n    const current = history[history.length - 1];\n    // копируем старое поле в текущую переменную\n    const squares = current.squares.slice();\n    // получаем текущую позицию, цифры - номера клеток\n    const currentPosition = [\n      (i < 3) ? 1 : (i > 5 ? 3 : 2),\n      (i === 0 || i === 3 || i === 6) ? 1 : (i === 1 || i === 4 || i === 7 ? 2 : 3)\n    ];\n\n    // если победитель есть, выходим из обработчика\n    if (calculateWinner(squares) || squares[i]) return;\n    // заполняем выбранную клекту\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    // устанавливаем новое поле и меняем очередность игроков\n    this.setState({\n      // записываем текущий ход в историю\n      history: history.concat([{\n        squares: squares,\n        position: currentPosition,\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  // переход к ходу из истории\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      // четный ход 0, нечетный Х\n      xIsNext: (step % 2) === 0,\n    });\n  }\n\n  // обработчик клика по переключателю сортировки фильмов\n  handleClickSwitch() {\n    this.setState({\n      // меняем стейт переключателя\n      isIncrease: this.state.isIncrease ? false : true,\n    });\n  }\n\n  render() {\n    // получаем историю игры\n    const history = this.state.history;\n    // получаем текущий ход\n    const current = history[this.state.stepNumber];\n    // определение победителя и выигрышного ряда\n    const winner = calculateWinner(current.squares);\n    // ходы, step - текущее состояние истории, move - текущий ход\n    const moves = history.map((step, move) => {\n      const desc = move ?\n        `Перейти к ходу #${move}` :\n        'К началу игры';\n      const position = step.position ?\n        ` - позиция (${step.position})` :\n        '';\n      return (\n        <li key={move}>\n          <button className=\"button\" onClick={_ => this.jumpTo(move)}>{`${desc} ${position}`}</button>\n        </li>\n      );\n    });\n\n    // определение состояния игры\n    let status;\n    if (current.squares.indexOf(null) === -1 && !winner) {\n      status = 'Ничья';\n    } else if (winner) {\n      status = 'Выиграл ' + winner.winner;\n    } else {\n      status = 'Следующий ход: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={i => this.handleClick(i)}\n            winnerRow={winner ? winner.row : []}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <Switch\n            onClick={this.handleClickSwitch}\n            isIncrease={this.state.isIncrease}\n            moves={moves}\n          />\n          <ol>{this.state.isIncrease ? moves : moves.reverse()}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,OAAO,YAAP,C,CAEA;;;;AACA,MAAMC,IAAN,SAAmBJ,KAAK,CAACK,SAAzB,CAAmC;EACjCC,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACX;MACAC,OAAO,EAAE,CAAC;QACRC,OAAO,EAAEC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd;MADD,CAAD,CAFE;MAKX;MACAC,UAAU,EAAE,CAND;MAOX;MACAC,OAAO,EAAE,IARE;MASX;MACAC,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,CAVC;MAWX;MACAC,UAAU,EAAE;IAZD,CAAb;IAcA,KAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;EACD,CAlBgC,CAoBjC;;;EACAC,WAAW,CAACC,CAAD,EAAI;IACb;IACA,MAAMX,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAAX,CAAmBY,KAAnB,CAAyB,CAAzB,EAA4B,KAAKb,KAAL,CAAWK,UAAX,GAAwB,CAApD,CAAhB,CAFa,CAGb;;IACA,MAAMS,OAAO,GAAGb,OAAO,CAACA,OAAO,CAACc,MAAR,GAAiB,CAAlB,CAAvB,CAJa,CAKb;;IACA,MAAMb,OAAO,GAAGY,OAAO,CAACZ,OAAR,CAAgBW,KAAhB,EAAhB,CANa,CAOb;;IACA,MAAMG,eAAe,GAAG,CACrBJ,CAAC,GAAG,CAAL,GAAU,CAAV,GAAeA,CAAC,GAAG,CAAJ,GAAQ,CAAR,GAAY,CADL,EAErBA,CAAC,KAAK,CAAN,IAAWA,CAAC,KAAK,CAAjB,IAAsBA,CAAC,KAAK,CAA7B,GAAkC,CAAlC,GAAuCA,CAAC,KAAK,CAAN,IAAWA,CAAC,KAAK,CAAjB,IAAsBA,CAAC,KAAK,CAA5B,GAAgC,CAAhC,GAAoC,CAFrD,CAAxB,CARa,CAab;;IACA,IAAIjB,eAAe,CAACO,OAAD,CAAf,IAA4BA,OAAO,CAACU,CAAD,CAAvC,EAA4C,OAd/B,CAeb;;IACAV,OAAO,CAACU,CAAD,CAAP,GAAa,KAAKZ,KAAL,CAAWM,OAAX,GAAqB,GAArB,GAA2B,GAAxC,CAhBa,CAiBb;;IACA,KAAKW,QAAL,CAAc;MACZ;MACAhB,OAAO,EAAEA,OAAO,CAACiB,MAAR,CAAe,CAAC;QACvBhB,OAAO,EAAEA,OADc;QAEvBK,QAAQ,EAAES;MAFa,CAAD,CAAf,CAFG;MAMZX,UAAU,EAAEJ,OAAO,CAACc,MANR;MAOZT,OAAO,EAAE,CAAC,KAAKN,KAAL,CAAWM;IAPT,CAAd;EASD,CAhDgC,CAkDjC;;;EACAa,MAAM,CAACC,IAAD,EAAO;IACX,KAAKH,QAAL,CAAc;MACZZ,UAAU,EAAEe,IADA;MAEZ;MACAd,OAAO,EAAGc,IAAI,GAAG,CAAR,KAAe;IAHZ,CAAd;EAKD,CAzDgC,CA2DjC;;;EACAX,iBAAiB,GAAG;IAClB,KAAKQ,QAAL,CAAc;MACZ;MACAT,UAAU,EAAE,KAAKR,KAAL,CAAWQ,UAAX,GAAwB,KAAxB,GAAgC;IAFhC,CAAd;EAID;;EAEDa,MAAM,GAAG;IACP;IACA,MAAMpB,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAA3B,CAFO,CAGP;;IACA,MAAMa,OAAO,GAAGb,OAAO,CAAC,KAAKD,KAAL,CAAWK,UAAZ,CAAvB,CAJO,CAKP;;IACA,MAAMiB,MAAM,GAAG3B,eAAe,CAACmB,OAAO,CAACZ,OAAT,CAA9B,CANO,CAOP;;IACA,MAAMqB,KAAK,GAAGtB,OAAO,CAACuB,GAAR,CAAY,CAACJ,IAAD,EAAOK,IAAP,KAAgB;MACxC,MAAMC,IAAI,GAAGD,IAAI,GACd,mBAAkBA,IAAK,EADT,GAEf,eAFF;MAGA,MAAMlB,QAAQ,GAAGa,IAAI,CAACb,QAAL,GACd,eAAca,IAAI,CAACb,QAAS,GADd,GAEf,EAFF;MAGA,oBACE;QAAA,uBACE;UAAQ,SAAS,EAAC,QAAlB;UAA2B,OAAO,EAAEoB,CAAC,IAAI,KAAKR,MAAL,CAAYM,IAAZ,CAAzC;UAAA,UAA8D,GAAEC,IAAK,IAAGnB,QAAS;QAAjF;UAAA;UAAA;UAAA;QAAA;MADF,GAASkB,IAAT;QAAA;QAAA;QAAA;MAAA,QADF;IAKD,CAZa,CAAd,CARO,CAsBP;;IACA,IAAIG,MAAJ;;IACA,IAAId,OAAO,CAACZ,OAAR,CAAgB2B,OAAhB,CAAwB,IAAxB,MAAkC,CAAC,CAAnC,IAAwC,CAACP,MAA7C,EAAqD;MACnDM,MAAM,GAAG,OAAT;IACD,CAFD,MAEO,IAAIN,MAAJ,EAAY;MACjBM,MAAM,GAAG,aAAaN,MAAM,CAACA,MAA7B;IACD,CAFM,MAEA;MACLM,MAAM,GAAG,qBAAqB,KAAK5B,KAAL,CAAWM,OAAX,GAAqB,GAArB,GAA2B,GAAhD,CAAT;IACD;;IAED,oBACE;MAAK,SAAS,EAAC,MAAf;MAAA,wBACE;QAAK,SAAS,EAAC,YAAf;QAAA,uBACE,QAAC,KAAD;UACE,OAAO,EAAEQ,OAAO,CAACZ,OADnB;UAEE,OAAO,EAAEU,CAAC,IAAI,KAAKD,WAAL,CAAiBC,CAAjB,CAFhB;UAGE,SAAS,EAAEU,MAAM,GAAGA,MAAM,CAACQ,GAAV,GAAgB;QAHnC;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAQE;QAAK,SAAS,EAAC,WAAf;QAAA,wBACE;UAAA,UAAMF;QAAN;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,MAAD;UACE,OAAO,EAAE,KAAKnB,iBADhB;UAEE,UAAU,EAAE,KAAKT,KAAL,CAAWQ,UAFzB;UAGE,KAAK,EAAEe;QAHT;UAAA;UAAA;UAAA;QAAA,QAFF,eAOE;UAAA,UAAK,KAAKvB,KAAL,CAAWQ,UAAX,GAAwBe,KAAxB,GAAgCA,KAAK,CAACQ,OAAN;QAArC;UAAA;UAAA;UAAA;QAAA,QAPF;MAAA;QAAA;QAAA;QAAA;MAAA,QARF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAoBD;;AAvHgC;;AA0HnC,eAAenC,IAAf"},"metadata":{},"sourceType":"module"}